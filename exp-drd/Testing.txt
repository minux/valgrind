How to test DRD
~~~~~~~~~~~~~~~

1. Run the regression tests. After having compiled DRD, run the following
   command:
     perl tests/vg_regtest exp-drd
2. Test the slowdown for matinv for various matrix sizes (must be about 45
   for i == 1 and about 50 for i == 10):
     time exp-drd/tests/matinv 200
     for ((i=1;i<=10;i++))
     do
       echo "==== $i ===="
       time ./vg-in-place --tool=exp-drd exp-drd/tests/matinv 200 -t$i
     done
3. Test whether DRD works with standard KDE applications and whether it does
   not print any error messages:
     ./vg-in-place --tool=exp-drd kate
     ./vg-in-place --trace-children=yes --tool=exp-drd knode
     ./vg-in-place --trace-children=yes --tool=exp-drd amarokapp
4. Test whether DRD works with standard GNOME applications. Expect race reports
   after having closed the GNOME terminal window:
     ./vg-in-place --trace-children=yes --tool=exp-drd gnome-terminal
5. Test DRD with Firefox. First of all, build and install Firefox 3. Next,
   run the following command:
     LD_LIBRARY_PATH=$HOME/software/mozilla-build/dist/lib: ./vg-in-place --trace-children=yes --tool=exp-drd $HOME/software/mozilla-build/dist/bin/firefox-bin






The Firefox source code can be obtained here:
ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/${version}/source

See also http://developer.mozilla.org/en/docs/Build_Documentation

Firefox can be compiled via the following shell script:
------------------------------------------------------------
#!/bin/sh

SRCDIR=$HOME/software
SRC=$SRCDIR/mozilla
BUILD=${SRC}-build
PREFIX=$HOME/firefox3
MOZCONFIG=$BUILD/mozconfig-firefox
export MOZCONFIG

rm -rf   ${BUILD}   || exit $?
rm -rf   ${PREFIX}  || exit $?
mkdir -p ${BUILD}   || exit $?
cd       ${BUILD}   || exit $?

cat <<EOF >$MOZCONFIG
. $SRC/browser/config/mozconfig
mk_add_options MOZ_OBJDIR="$BUILD"
ac_add_app_options browser --enable-application=browser
ac_add_options --disable-optimize
ac_add_options --disable-tests
ac_add_options --enable-debug
ac_add_options --enable-static
ac_add_options --prefix $PREFIX
ac_add_options --enable-optimize="-O1 -g -pipe"
EOF

${SRC}/configure

make -s -j2     || exit $?
# make -s install || exit $?
------------------------------------------------------------
