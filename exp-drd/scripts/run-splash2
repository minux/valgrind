#!/bin/bash

########################
# Function definitions #
########################

function log2 {
  local i

  for ((i=0;i<64;i++))
  do
    if [ $((2**i)) = $1 ]; then
      echo $i
      return 0
    fi
  done
  echo ""
  return 1
}

function get_cache_size {
  local s
  s=$(</sys/devices/system/cpu/cpu0/cache/index2/size)
  if [ "${s%M}" != "$s" ]; then
    echo $((${s%M}*1024*1024))
  elif [ "${s%K}" != "$s" ]; then
    echo $((${s%K}*1024))
  else
    echo $s
  fi
}

# Read a stream of numbers from stdin (one per line), and print the average
# and standard deviation.
function avgstddev {
  awk '{n++;sum+=$1;sumsq+=$1*$1}END{d=sumsq/n-sum*sum/n/n;print sum/n,(d>0?sqrt(d):0)}'
}

function run_test {
  local tmp avg1=1 stddev1=1 avg2=1 stddev2=1

  tmp="/tmp/test-timing.$$"
  rm -f "${tmp}"

  echo "$@"
  for ((i=0;i<3;i++))
  do
    cat "${test_input:-/dev/null}" | \
      /usr/bin/time --format="%e" "$@" 2>&1 | \
      tee "${1}.out" | \
      tail -n 1
  done | avgstddev > "$tmp"
  read avg1 stddev1 < "$tmp"
  echo "Average time: ${avg1} +/- ${stddev1} seconds"

  for p in 1 2 4
  do
    echo "$VG --tool=exp-drd --check-stack-var=yes $@ -p$p"
    for ((i=0;i<3;i++))
    do
      cat "${test_input:-/dev/null}" | \
        /usr/bin/time --format="%e" $VG --tool=exp-drd "$@" -p$p 2>&1 | \
        tee "${1}-drd-with-stack-var-${p}.out" | \
        tail -n 1
    done | avgstddev > "$tmp"
    read avg2 stddev2 < "$tmp"
    echo "Average time: ${avg2} +/- ${stddev2} seconds"
    awk "END{print "'"'"Ratio ="'"'", ${avg2}/${avg1}, "'"'"+/-"'"'", ${avg2}/${avg1}*(${stddev1}/${avg1}+${stddev2}/${avg2})}" </dev/null

    echo "$VG --tool=exp-drd --check-stack-var=no $@ -p$p"
    for ((i=0;i<3;i++))
    do
      cat "${test_input:-/dev/null}" | \
        /usr/bin/time --format="%e" $VG --tool=exp-drd "$@" -p$p 2>&1 | \
        tee "${1}-drd-without-stack-var-${p}.out" | \
        tail -n 1
    done | avgstddev > "$tmp"
    read avg2 stddev2 < "$tmp"
    echo "Average time: ${avg2} +/- ${stddev2} seconds"
    awk "END{print "'"'"Ratio ="'"'", ${avg2}/${avg1}, "'"'"+/-"'"'", ${avg2}/${avg1}*(${stddev1}/${avg1}+${stddev2}/${avg2})}" </dev/null
  done

  echo ''

  rm -f "$tmp"
}


# Script body

DRD_SCRIPTS_DIR="$(dirname $0)"
if [ "${DRD_SCRIPTS_DIR:0:1}" != "/" ]; then
  DRD_SCRIPTS_DIR="$PWD/$DRD_SCRIPTS_DIR"
fi

SPLASH2="${DRD_SCRIPTS_DIR}/../splash2"
if [ ! -e "${SPLASH2}" ]; then
  echo "Error: splash2 directory not found (${SPLASH2})."
  exit 1
fi

if [ "$VG" = "" ]; then
  VG="${DRD_SCRIPTS_DIR}/../../vg-in-place"
fi

if [ ! -e "$VG" ]; then
  echo "Could not find $VG."
  exit 1
fi

##############################################################################
# Results:                      (-p1) (-p2) (-p4) ITC (-p4) ITC (-p4)
#                                                  original w/ filter
# ............................................................................
# Cholesky                        40    47    82      239      82
# FFT                             16    17    47       90      41
# LU, contiguous blocks           39    41    45      428     128
# LU, non-contiguous blocks       39    41    49      428     128
# Ocean, contiguous partitions    17    19    25       90      28
# Ocean, non-continguous partns   18    21    30       90      28
# Radiosity                       78    78    78      485     163
# Radix                           10    12    15      222      56
# Raytrace                        56    56    56      172      53
# Water-n2                        34    34    34      189      39
# Water-sp                        33    33    33      183      34
# ............................................................................
# Hardware: dual-core Intel Xeon 5130, 2.0 GHz, 4 MB L2 cache, 4 GB RAM.
# Software: Ubuntu 7.10 server, 64-bit, gcc 4.1.3.
##############################################################################
# Results:                      native DRD (-p4) DRD (-p4) ITC (-p4) ITC (-p4)
#                               time   original  w/ filter  original w/ filter
# ............................................................................
# Cholesky                        0.21     74       76         239      82
# FFT                             0.16     12       11          90      41
# LU, contiguous blocks           0.57     49       49         428     128
# LU, non-contiguous blocks       0.60     52       52         428     128
# Ocean, contiguous partitions   14.42     24       24          90      28
# Ocean, non-continguous partns   0.21     30       30          90      28
# Radiosity                       2.35     75       76         485     163
# Radix                           2.80     15       16         222      56
# Raytrace                       90.79     55       54         172      53
# Water-n2                        0.15     27       27         189      39
# Water-sp                        0.15     26       26         183      34
# ............................................................................
# Hardware: dual-core Intel Core2 Duo E6750, 2.66 GHz, 4 MB L2 cache, 2 GB RAM.
# Software: openSUSE 10.3, 64-bit, gcc 4.2.1.
##############################################################################

cache_size=$(($(get_cache_size)/2))
log2_cache_size=$(log2 ${cache_size})

# Cholesky
(
  cd ${SPLASH2}/codes/kernels/cholesky/inputs
  for f in *Z
  do
    gzip -cd <$f >${f%.Z}
  done
  run_test ../CHOLESKY -C${cache_size} tk29.O
)

# FFT
run_test ${SPLASH2}/codes/kernels/fft/FFT -t -l${log2_cache_size} -m18

# LU, contiguous blocks.
run_test ${SPLASH2}/codes/kernels/lu/contiguous_blocks/LU -n1024

# LU, non-contiguous blocks.
run_test ${SPLASH2}/codes/kernels/lu/non_contiguous_blocks/LU -n1024

# Ocean
run_test ${SPLASH2}/codes/apps/ocean/contiguous_partitions/OCEAN -n2050
run_test ${SPLASH2}/codes/apps/ocean/non_contiguous_partitions/OCEAN -n258

# Radiosity.
run_test ${SPLASH2}/codes/apps/radiosity/RADIOSITY -batch -room

# Radix
run_test ${SPLASH2}/codes/kernels/radix/RADIX -n$((2**24))

# Raytrace
(
  cd ${SPLASH2}/codes/apps/raytrace/inputs
  rm -f *.env *.geo *.rl
  for f in *Z
  do
    gzip -cd <$f >${f%.Z}
  done
  run_test ../RAYTRACE balls4.env
)

# Water-n2
(
  cd ${SPLASH2}/codes/apps/water-nsquared
  test_input=input run_test ./WATER-NSQUARED
)

# Water-sp
(
  cd ${SPLASH2}/codes/apps/water-spatial
  test_input=input run_test ./WATER-SPATIAL
)



# Local variables:
# compile-command: "./run-splash2"
# End:
